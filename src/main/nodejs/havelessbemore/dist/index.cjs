"use strict";var Y=require("node:os"),J=require("node:url"),X=require("node:worker_threads"),U=require("node:fs"),Q=require("fs/promises"),ee=require("worker_threads"),P=typeof document<"u"?document.currentScript:null;const x=1e4,te=100,W=107,re=45,C=10,ne=59,q=48,k=32,se=192,v=16384,ae=1048576,oe=1048576,ie=152e-6,_e=v,F=11*q,B=111*q,ce=1,ue=512;function b(e,t,r){return e>t?e<=r?e:r:t}async function Ee(e,t,r,l=0){const a=await Q.open(e);try{const i=(await a.stat()).size,f=Math.max(l,Math.floor(i/t)),s=Buffer.allocUnsafe(r),o=[];let _=0;for(let E=f;E<i;E+=f){const M=await a.read(s,0,r,E),u=s.indexOf(C);u>=0&&u<M.bytesRead&&(E+=u+1,o.push([_,E]),_=E)}return _<i&&o.push([_,i]),o}finally{await a.close()}}function fe(e){return e*=ie,e=Math.round(Math.log2(e)),e=2**e,b(e,v,ae)}const le=524288,Ie=1.6180339887,p=0,Re=1,m=Re,Me=0,Te=1,H=1,he=1,S=Te+he,D=0,de=1,A=1,we=1,y=2,K=se,Z=m*K,L=de+we+Z,w=0,g=0,me=1,N=1,Ae=L,G=N+D,$=me+Ae;function ge(e,t,r,l){let a=N;for(;r<l;){a+=y+m*(t[r++]-k);let i=e[a+p];i===w&&(i=e[g],i+L>e.length&&(e=j(e,i+L)),e[g]+=L,e[a+p]=i,e[i+D]=e[G]),a=i}return[e,a]}function V(e=0,t=le){t=Math.max($,t);const r=new Int32Array(new SharedArrayBuffer(t<<2));return r[g]=$,r[G]=e,r}function j(e,t=0){const r=e[g];t=Math.max(t,Math.ceil(r*Ie));const l=new Int32Array(new SharedArrayBuffer(t<<2));for(let a=0;a<r;++a)l[a]=e[a];return l}function pe(e,t,r,l){const a=[[t,N,r,N]];do{const i=a.length;for(let f=0;f<i;++f){let[s,o,_,E]=a[f];const M=e[_][E+A];if(M!==w){const I=e[s][o+A];I!==w?l(I,M):e[s][o+A]=M}o+=y,E+=y;const u=E+Z;for(;E<u;){let I=e[_][E+p];if(I===w){o+=m,E+=m;continue}const T=e[_][I+D];_!==T&&(I=e[_][I+H]);let h=e[s][o+p];if(h===w)h=e[s][g],h+S>e[s].length&&(e[s]=j(e[s],h+S)),e[s][g]+=S,e[s][h+Me]=T,e[s][h+H]=I;else{const n=e[s][h+D];s!==n&&(o=e[s][h+H]),a.push([n,h,T,I])}o+=m,E+=m}}a.splice(0,i)}while(a.length>0)}function De(e,t,r,l,a="",i){const f=new Array(t.length+1);f[0]=[r,N+y,0];let s=0,o=!1;do{let[_,E,M]=f[s];if(M>=K){--s;continue}f[s][1]+=m,++f[s][2];let u=e[_][E+p];if(u===w)continue;const I=e[_][u+D];_!==I&&(u=e[_][u+H],_=I),t[s]=M+k,f[++s]=[_,u+y,0];const T=e[_][u+A];T!==w&&(o&&l.write(a),o=!0,i(l,t,s,T))}while(s>=0)}function ye(e){const t=new ee.Worker(e);return t.on("error",r=>{throw r}),t.on("messageerror",r=>{throw r}),t.on("exit",r=>{if(r>1||r<0)throw new Error(`Worker ${t.threadId} exited with code ${r}`)}),t}function z(e,t){return new Promise(r=>{e.once("message",r),e.postMessage(t)})}async function Ne(e,t,r,l=""){r=b(r,ce,ue);const a=await Ee(e,r,W,_e);r=a.length;const i=new SharedArrayBuffer(x*r+1<<4),f=new Int16Array(i),s=new Int16Array(i,2),o=new Uint32Array(i,4),_=new Float64Array(i,8),E=new Array(r),M=new Array(r);for(let n=0;n<r;++n)M[n]=ye(t);const u=new Array(r);for(let n=0;n<r;++n)u[n]=z(M[n],{type:"process_request",counts:o,end:a[n][1],filePath:e,id:n,maxes:s,mins:f,start:a[n][0],sums:_}).then(c=>{E[c.id]=c.trie});for(let n=u.length-1;n>0;--n){const c=n-1>>1,R=n;u[c]=u[c].then(()=>u[R]).then(()=>z(M[c],{type:"merge_request",a:c,b:R,counts:o,maxes:s,mins:f,sums:_,tries:E})).then(d=>{E[d.id]=d.trie})}for(let n=0;n<r;++n)u[n]=u[n].then(()=>M[n].terminate());await Promise.all(u);const I=U.createWriteStream(l,{fd:l.length<1?1:void 0,flags:"a",highWaterMark:oe}),T=Buffer.allocUnsafe(te);I.write("{"),De(E,T,0,I,", ",h),I.end(`}
`);function h(n,c,R,d){const O=Math.round(_[d<<1]/o[d<<2]);n.write(c.toString("utf8",0,R)),n.write("="),n.write((f[d<<3]/10).toFixed(1)),n.write("/"),n.write((O/10).toFixed(1)),n.write("/"),n.write((s[d<<3]/10).toFixed(1))}}async function Oe({end:e,filePath:t,id:r,start:l,counts:a,maxes:i,mins:f,sums:s}){if(l>=e)return{type:"process_response",id:r,trie:V(r,0)};let o=V(r),_=r*x+1;const E=Buffer.allocUnsafe(W),M=U.createReadStream(t,{start:l,end:e-1,highWaterMark:fe(e-l)});let u=0,I=0,T;for await(const c of M){const R=c.length;for(let d=0;d<R;++d)if(c[d]===ne)I=u;else if(c[d]!==C)E[u++]=c[d];else{const O=Xe(E,I,u);u=0,[o,T]=ge(o,E,0,I),o[T+A]!==w?n(o[T+A],O):(o[T+A]=_,h(_++,O))}}function h(c,R){f[c<<3]=R,i[c<<3]=R,a[c<<2]=1,s[c<<1]=R}function n(c,R){c<<=3,f[c]=f[c]<=R?f[c]:R,i[c]=i[c]>=R?i[c]:R,++a[c>>1],s[c>>2]+=R}return{type:"process_response",id:r,trie:o}}function Xe(e,t,r){return e[t]===re?(++t,t+4>r?-(10*e[t]+e[t+2]-F):-(100*e[t]+10*e[t+1]+e[t+3]-B)):t+4>r?10*e[t]+e[t+2]-F:100*e[t]+10*e[t+1]+e[t+3]-B}function He({a:e,b:t,tries:r,counts:l,maxes:a,mins:i,sums:f}){pe(r,e,t,s);function s(o,_){o<<=3,_<<=3,i[o]=Math.min(i[o],i[_]),a[o]=Math.max(a[o],a[_]),l[o>>1]+=l[_>>1],f[o>>2]+=f[_>>2]}return{type:"merge_response",id:e,trie:r[e]}}if(X.isMainThread){const e=J.fileURLToPath(typeof document>"u"?require("url").pathToFileURL(__filename).href:P&&P.src||new URL("index.cjs",document.baseURI).href);Ne(process.argv[2],e,Y.availableParallelism())}else X.parentPort.addListener("message",async e=>{if(e.type==="process_request"){const t=await Oe(e);X.parentPort.postMessage(t)}else if(e.type==="merge_request"){const t=He(e);X.parentPort.postMessage(t)}else throw new Error("Unknown message type")});
//# sourceMappingURL=index.cjs.map
