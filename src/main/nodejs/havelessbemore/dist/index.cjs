/*!
 * https://github.com/havelessbemore/1brc-nodejs
 *
 * MIT License
 *
 * Copyright (C) 2024-2024 Michael Rojas <dev.michael.rojas@gmail.com> (https://github.com/havelessbemore)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

"use strict";var j=require("node:os"),z=require("node:url"),D=require("node:worker_threads"),X=require("node:fs"),J=require("fs/promises"),Q=require("worker_threads"),U=typeof document<"u"?document.currentScript:null;const x=1e4,ee=100,P=107,te=16384,re=1048576,ne=1048576,ae=152e-6,oe=16384,se=1,ie=512,_e=45,W=10,C=59,k=48,v=32,ce=216;function F(e,r,t){return e>r?e<=t?e:t:r}async function ue(e,r,t,l=0){const _=await J.open(e);try{const a=(await _.stat()).size,f=Math.max(l,Math.floor(a/r)),u=Buffer.allocUnsafe(t),n=[];let o=0;for(let c=f;c<a;c+=f){const I=await _.read(u,0,t,c),E=u.indexOf(W);E>=0&&E<I.bytesRead&&(c+=E+1,n.push([o,c]),o=c)}return o<a&&n.push([o,a]),n}finally{await _.close()}}function Ee(e){return e*=ae,e=Math.round(Math.log2(e)),e=2**e,F(e,te,re)}const fe=655360,le=1.6180339887,Ie=1,O=Ie,Re=1,S=1,Me=1,L=Re+Me,Te=0,de=1,m=1,he=1,g=2,B=ce,b=O*B,H=de+he+b,w=0,y=0,we=1,N=1,Ae=H,q=N+Te,K=we+Ae;function me(e,r,t,l){let _=N;for(;t<l;){_+=g+(r[t++]-v);let a=e[_];a===w&&(a=e[y],a+H>e.length&&(e=G(e,a+H)),e[y]+=H,e[_]=a,e[a]=e[q]),_=a}return[e,_]}function Z(e=0,r=fe){r=Math.max(K,r);const t=new Int32Array(new SharedArrayBuffer(r<<2));return t[y]=K,t[q]=e,t}function G(e,r=0){const t=e[y];r=Math.max(r,Math.ceil(t*le));const l=new Int32Array(new SharedArrayBuffer(r<<2));for(let _=0;_<t;++_)l[_]=e[_];return l}function ye(e,r,t,l){const _=new Set,a=[[r,N,t,N]];do{const f=a.length;for(let u=0;u<f;++u){let[n,o,c,I]=a[u];const E=e[c][I+m];if(E!==w){const R=e[n][o+m];R!==w?l(R,E):e[n][o+m]=E}o+=g,I+=g;const T=I+b;for(;I<T;){let R=e[c][I];if(R!==w){const A=e[c][R];c!==A&&(R=e[c][R+S]);let s=e[n][o];if(s===w)s=e[n][y],s+L>e[n].length&&(e[n]=G(e[n],s+L),_.add(n)),e[n][y]+=L,e[n][o]=s,e[n][s]=A,e[n][s+S]=R;else{const i=e[n][s];n!==i&&(s=e[n][s+S]),a.push([i,s,A,R])}}o+=O,I+=O}}a.splice(0,f)}while(a.length>0);return Array.from(_)}function ge(e,r,t,l,_="",a){const f=new Array(r.length+1);f[0]=[t,N+g,0];let u=0,n=!1;do{let[o,c,I]=f[u];if(I>=B){--u;continue}f[u][1]+=O,++f[u][2];let E=e[o][c];if(E===w)continue;const T=e[o][E];o!==T&&(E=e[o][E+S],o=T),r[u]=I+v,f[++u]=[o,E+g,0];const R=e[o][E+m];R!==w&&(n&&l.write(_),n=!0,a(l,r,u,R))}while(u>=0)}function Ne(e){const r=new Q.Worker(e);return r.on("error",t=>{throw t}),r.on("messageerror",t=>{throw t}),r.on("exit",t=>{if(t>1||t<0)throw new Error(`Worker ${r.threadId} exited with code ${t}`)}),r}function Y(e,r){return new Promise(t=>{e.once("message",t),e.postMessage(r)})}async function pe(e,r,t,l=""){t=F(t,se,ie);const _=await ue(e,t,P,oe);t=_.length;const a=new SharedArrayBuffer(x*t+1<<4),f=new Int16Array(a),u=new Int16Array(a,2),n=new Uint32Array(a,4),o=new Float64Array(a,8),c=new Array(t),I=[],E=new Array(t),T=new Array(t);for(let i=0;i<t;++i)E[i]=Ne(r),T[i]=Y(E[i],{type:"process",counts:n,end:_[i][1],filePath:e,id:i,maxes:u,mins:f,start:_[i][0],sums:o}).then(async d=>{const M=d.id;for(c[d.id]=d.trie;I.length>0;){const h=await Y(E[M],{type:"merge",a:M,b:I.pop(),counts:n,maxes:u,mins:f,sums:o,tries:c});for(const p of h.ids)c[p]=h.tries[p]}return I.push(M),E[M].terminate()});await Promise.all(T);const R=X.createWriteStream(l,{fd:l.length<1?1:void 0,flags:"a",highWaterMark:ne}),A=Buffer.allocUnsafe(ee);R.write("{"),ge(c,A,I[0],R,", ",s),R.end(`}
`);function s(i,d,M,h){const p=Math.round(o[h<<1]/n[h<<2]);i.write(d.toString("utf8",0,M)),i.write("="),i.write((f[h<<3]/10).toFixed(1)),i.write("/"),i.write((p/10).toFixed(1)),i.write("/"),i.write((u[h<<3]/10).toFixed(1))}}const $=11*k,V=111*k;function De(e,r,t){return e[r]===_e?(++r,r+4>t?$-10*e[r]-e[r+2]:V-100*e[r]-10*e[r+1]-e[r+3]):r+4>t?10*e[r]+e[r+2]-$:100*e[r]+10*e[r+1]+e[r+3]-V}async function Oe({end:e,filePath:r,id:t,start:l,counts:_,maxes:a,mins:f,sums:u}){if(l>=e)return{id:t,trie:Z(t,0)};let n=Z(t),o=t*x+1;const c=Buffer.allocUnsafe(P),I=X.createReadStream(r,{start:l,end:e-1,highWaterMark:Ee(e-l)});let E=0,T;for await(const s of I){const i=s.length;for(let d=0;d<i;++d){if(s[d]!==W){c[E++]=s[d];continue}let M=E-4;c[M-2]===C?M-=2:c[M-1]===C&&(M-=1);const h=De(c,M+1,E);E=0,[n,T]=me(n,c,0,M),n[T+m]!==w?A(n[T+m],h):(n[T+m]=o,R(o++,h))}}function R(s,i){f[s<<3]=i,a[s<<3]=i,_[s<<2]=1,u[s<<1]=i}function A(s,i){s<<=3,f[s]=f[s]<=i?f[s]:i,a[s]=a[s]>=i?a[s]:i,++_[s>>1],u[s>>2]+=i}return{id:t,trie:n}}function Se({a:e,b:r,tries:t,counts:l,maxes:_,mins:a,sums:f}){function u(n,o){n<<=3,o<<=3,a[n]=Math.min(a[n],a[o]),_[n]=Math.max(_[n],_[o]),l[n>>1]+=l[o>>1],f[n>>2]+=f[o>>2]}return{ids:ye(t,e,r,u),tries:t}}if(D.isMainThread){const e=z.fileURLToPath(typeof document>"u"?require("url").pathToFileURL(__filename).href:U&&U.src||new URL("index.cjs",document.baseURI).href);pe(process.argv[2],e,j.availableParallelism())}else D.parentPort.addListener("message",async e=>{if(e.type==="process")D.parentPort.postMessage(await Oe(e));else if(e.type==="merge")D.parentPort.postMessage(Se(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.cjs.map
