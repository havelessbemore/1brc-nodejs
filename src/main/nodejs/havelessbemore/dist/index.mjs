import{availableParallelism as G}from"node:os";import{fileURLToPath as Y}from"node:url";import{isMainThread as Q,parentPort as b}from"node:worker_threads";import{createWriteStream as V}from"node:fs";import{open as F}from"fs/promises";function A(e,t,n){return e>t?e<=n?e:n:t}async function S(e,t,n,p=0){let a=await F(e);try{let u=(await a.stat()).size,s=Math.max(p,Math.floor(u/t)),m=Buffer.allocUnsafe(n),r=[],f=0;for(let I=s;I<u;I+=s){let _=await a.read(m,0,n,I),c=m.indexOf(10);c>=0&&c<_.bytesRead&&(I+=c+1,r.push([f,I]),f=I)}return f<u&&r.push([f,u]),r}finally{await a.close()}}function N(e){return e*=152e-6,e=Math.round(Math.log2(e)),e=2**e,A(e,16384,1048576)}var X=(r=>(r[r.ID_IDX=0]="ID_IDX",r[r.ID_MEM=1]="ID_MEM",r[r.VALUE_IDX=1]="VALUE_IDX",r[r.VALUE_MEM=1]="VALUE_MEM",r[r.CHILDREN_IDX=2]="CHILDREN_IDX",r[r.CHILDREN_LEN=216]="CHILDREN_LEN",r[r.CHILDREN_MEM=1*r.CHILDREN_LEN]="CHILDREN_MEM",r[r.MEM=2+r.CHILDREN_MEM]="MEM",r))(X||{}),g=(s=>(s[s.SIZE_IDX=0]="SIZE_IDX",s[s.SIZE_MEM=1]="SIZE_MEM",s[s.ROOT_IDX=1]="ROOT_IDX",s[s.ROOT_MEM=X.MEM]="ROOT_MEM",s[s.ID_IDX=1]="ID_IDX",s[s.MEM=1+s.ROOT_MEM]="MEM",s))(g||{});function O(e,t,n,p){let a=1;for(;n<p;){a+=2+1*(t[n++]-32);let u=e[a+0];u===0&&(u=e[0],u+X.MEM>e.length&&(e=U(e,u+X.MEM)),e[0]+=X.MEM,e[a+0]=u,e[u+0]=e[1]),a=u}return[e,a]}function y(e=0,t=655360){t=Math.max(g.MEM,t);let n=new Int32Array(new SharedArrayBuffer(t<<2));return n[0]=g.MEM,n[1]=e,n}function U(e,t=0){let n=e[0];t=Math.max(t,Math.ceil(n*1.6180339887));let p=new Int32Array(new SharedArrayBuffer(t<<2));for(let a=0;a<n;++a)p[a]=e[a];return p}function C(e,t,n,p){let a=new Set,u=[[t,1,n,1]];do{let s=u.length;for(let m=0;m<s;++m){let[r,f,I,_]=u[m],c=e[I][_+1];if(c!==0){let D=e[r][f+1];D!==0?p(D,c):e[r][f+1]=c}f+=2,_+=2;let E=_+X.CHILDREN_MEM;for(;_<E;){let D=e[I][_+0];if(D!==0){let i=e[I][D+0];I!==i&&(D=e[I][D+1]);let o=e[r][f+0];if(o===0)o=e[r][0],o+2>e[r].length&&(e[r]=U(e[r],o+2),a.add(r)),e[r][0]+=2,e[r][f+0]=o,e[r][o+0]=i,e[r][o+1]=D;else{let M=e[r][o+0];r!==M&&(o=e[r][o+1]),u.push([M,o,i,D])}}f+=1,_+=1}}u.splice(0,s)}while(u.length>0);return Array.from(a)}function d(e,t,n,p,a="",u){let s=new Array(t.length+1);s[0]=[n,3,0];let m=0,r=!1;do{let[f,I,_]=s[m];if(_>=X.CHILDREN_LEN){--m;continue}s[m][1]+=1,++s[m][2];let c=e[f][I+0];if(c===0)continue;let E=e[f][c+0];f!==E&&(c=e[f][c+1],f=E),t[m]=_+32,s[++m]=[f,c+2,0];let D=e[f][c+1];D!==0&&(r&&p.write(a),r=!0,u(p,t,m,D))}while(m>=0)}import{Worker as v}from"worker_threads";function H(e){let t=new v(e);return t.on("error",n=>{throw n}),t.on("messageerror",n=>{throw n}),t.on("exit",n=>{if(n>1||n<0)throw new Error(`Worker ${t.threadId} exited with code ${n}`)}),t}function L(e,t){return new Promise(n=>{e.once("message",n),e.postMessage(t)})}async function q(e,t,n,p=""){n=A(n,1,512);let a=await S(e,n,107,16384);n=a.length;let u=new SharedArrayBuffer(1e4*n+1<<4),s=new Int16Array(u),m=new Int16Array(u,2),r=new Uint32Array(u,4),f=new Float64Array(u,8),I=new Array(n),_=[],c=new Array(n);for(let o=0;o<n;++o){let M=H(t);c[o]=L(M,{type:"process",counts:r,end:a[o][1],filePath:e,id:o,maxes:m,mins:s,start:a[o][0],sums:f}).then(async R=>{let l=R.id;for(I[R.id]=R.trie;_.length>0;){let h=await L(M,{type:"merge",a:l,b:_.pop(),counts:r,maxes:m,mins:s,sums:f,tries:I});for(let w of h.ids)I[w]=h.tries[w]}return _.push(l),M.terminate()})}await Promise.all(c);let E=V(p,{fd:p.length<1?1:void 0,flags:"a",highWaterMark:1048576}),D=Buffer.allocUnsafe(100);E.write("{"),d(I,D,_[0],E,", ",i),E.end(`}
`);function i(o,M,R,l){let h=Math.round(f[l<<1]/r[l<<2]);o.write(M.toString("utf8",0,R)),o.write("="),o.write((s[l<<3]/10).toFixed(1)),o.write("/"),o.write((h/10).toFixed(1)),o.write("/"),o.write((m[l<<3]/10).toFixed(1))}}import{createReadStream as K}from"node:fs";var B=11*48,W=111*48;function k(e,t,n){return e[t]===45?(++t,t+4>n?B-10*e[t]-e[t+2]:W-100*e[t]-10*e[t+1]-e[t+3]):t+4>n?10*e[t]+e[t+2]-B:100*e[t]+10*e[t+1]+e[t+3]-W}async function x({end:e,filePath:t,id:n,start:p,counts:a,maxes:u,mins:s,sums:m}){if(p>=e)return{id:n,trie:y(n,0)};let r=y(n),f=n*1e4+1,I=Buffer.allocUnsafe(107),_=K(t,{start:p,end:e-1,highWaterMark:N(e-p)}),c=0,E;for await(let o of _){let M=o.length;for(let R=0;R<M;++R){if(o[R]!==10){I[c++]=o[R];continue}let l=c-4;I[l-2]===59?l-=2:I[l-1]===59&&(l-=1);let h=k(I,l+1,c);c=0,[r,E]=O(r,I,0,l),r[E+1]!==0?i(r[E+1],h):(r[E+1]=f,D(f++,h))}}function D(o,M){s[o<<3]=M,u[o<<3]=M,a[o<<2]=1,m[o<<1]=M}function i(o,M){o<<=3,s[o]=s[o]<=M?s[o]:M,u[o]=u[o]>=M?u[o]:M,++a[o>>1],m[o>>2]+=M}return{id:n,trie:r}}function Z({a:e,b:t,tries:n,counts:p,maxes:a,mins:u,sums:s}){function m(f,I){f<<=3,I<<=3,u[f]=Math.min(u[f],u[I]),a[f]=Math.max(a[f],a[I]),p[f>>1]+=p[I>>1],s[f>>2]+=s[I>>2]}return{ids:C(n,e,t,m),tries:n}}if(Q){let e=Y(import.meta.url);q(process.argv[2],e,G())}else b.addListener("message",async e=>{if(e.type==="process")b.postMessage(await x(e));else if(e.type==="merge")b.postMessage(Z(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.mjs.map
