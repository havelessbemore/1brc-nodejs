import{availableParallelism as Y}from"node:os";import{fileURLToPath as Q}from"node:url";import{isMainThread as $,parentPort as g}from"node:worker_threads";import{closeSync as x,createWriteStream as F,openSync as G}from"node:fs";import{stdout as K}from"node:process";import{fstatSync as B,readSync as v}from"fs";function X(e,r,t){return e>r?e<=t?e:t:r}function b(e,r,t,m=0){let s=B(e).size,f=Math.max(m,Math.floor(s/r)),I=Buffer.allocUnsafe(t),i=[],o=0;for(let u=f;u<s;u+=f){let M=v(e,I,0,t,u),c=I.indexOf(10);c>=0&&c<M&&(u+=c+1,i.push([o,u]),o=u)}return o<s&&i.push([o,s]),i}function w(e){return e*=.00625,e=Math.round(Math.log2(e)),e=2**e,X(e,16384,8388608)}function L(e,r,t,m){let s=1;for(;t<m;){s+=2+1*(r[t++]-32);let f=e[s+0];f===0&&(f=e[0],f+218>e.length&&(e=T(e,f+218)),e[0]+=218,e[s+0]=f,e[f+0]=e[1]),s=f}return[e,s]}function N(e=0,r=655360){r=Math.max(219,r);let t=new Int32Array(new SharedArrayBuffer(r<<2));return t[0]=219,t[1]=e,t}function T(e,r=0){let t=e[0];r=Math.max(r,Math.ceil(t*1.618033988749895));let m=new Int32Array(new SharedArrayBuffer(r<<2));for(let s=0;s<t;++s)m[s]=e[s];return m}function S(e,r,t,m){let s=[],f=[[r,1,t,1]];do{let I=f.length;for(let i=0;i<I;++i){let[o,u,M,c]=f[i],p=e[M][c+1];if(p!==0){let a=e[o][u+1];a!==0?m(a,p):e[o][u+1]=p}u+=2,c+=2;let _=c+216;for(;c<_;){let a=e[M][c+0];if(a!==0){let h=e[M][a+0];M!==h&&(a=e[M][a+1]);let l=e[o][u+0];if(l===0)l=e[o][0],l+2>e[o].length&&(e[o]=T(e[o],l+2),s.push(o)),e[o][0]+=2,e[o][u+0]=l,e[o][l+0]=h,e[o][l+1]=a;else{let n=e[o][l+0];o!==n&&(l=e[o][l+1]),f.push([n,l,h,a])}}u+=1,c+=1}}f.splice(0,I)}while(f.length>0);return s}function O(e,r,t,m,s="",f){let I=new Array(r.length+1);I[0]=[t,3,0];let i=0,o=!1;do{let[u,M,c]=I[i];if(c>=216){--i;continue}I[i][1]+=1,++I[i][2];let p=e[u][M+0];if(p===0)continue;let _=e[u][p+0];u!==_&&(p=e[u][p+1],u=_),r[i]=c+32,I[++i]=[u,p+2,0];let a=e[u][p+1];a!==0&&(o&&m.write(s),o=!0,f(m,r,i,a))}while(i>=0)}import{Worker as Z}from"node:worker_threads";function C(e){let r=new Z(e);return r.on("error",t=>{throw t}),r.on("messageerror",t=>{throw t}),r.on("exit",t=>{if(t>1||t<0)throw new Error(`Worker ${r.threadId} exited with code ${t}`)}),r}function d(e,r){return new Promise(t=>{e.once("message",t),e.postMessage(r)})}async function P(e,r,t,m=""){t=X(t,1,512);let s=G(e,"r"),f=b(s,t,107,16384);t=f.length;let I=new SharedArrayBuffer(1e4*t+1<<4),i=new Int16Array(I),o=new Int16Array(I,2),u=new Uint32Array(I,4),M=new Float64Array(I,8),c=new Array(t),p=[],_=new Array(t);for(let n=0;n<t;++n){let R=C(r);_[n]=d(R,{type:0,counts:u,end:f[n][1],fd:s,id:n,maxes:o,mins:i,start:f[n][0],sums:M}).then(async E=>{let D=E.id;for(c[D]=E.trie;p.length>0;){let y=await d(R,{type:1,a:D,b:p.pop(),counts:u,maxes:o,mins:i,sums:M,tries:c});for(let A of y.ids)c[A]=y.tries[A]}return p.push(D),R.terminate()})}await Promise.all(_),x(s);let a=F(m,{fd:m.length<1?K.fd:void 0,flags:"a",highWaterMark:1048576}),h=Buffer.allocUnsafe(100);a.write("{"),O(c,h,p[0],a,", ",l),a.end(`}
`);function l(n,R,E,D){let y=Math.round(M[D<<1]/u[D<<2]);n.write(R.toString("utf8",0,E)),n.write("="),n.write((i[D<<3]/10).toFixed(1)),n.write("/"),n.write((y/10).toFixed(1)),n.write("/"),n.write((o[D<<3]/10).toFixed(1))}}import{readSync as V}from"fs";var U=11*48,q=111*48;function H(e,r,t){return e[r]===45?(++r,r+4>t?U-10*e[r]-e[r+2]:q-100*e[r]-10*e[r+1]-e[r+3]):r+4>t?10*e[r]+e[r+2]-U:100*e[r]+10*e[r+1]+e[r+3]-q}function W({end:e,fd:r,id:t,start:m,counts:s,maxes:f,mins:I,sums:i}){let o=(n,R)=>{I[n<<3]=R,f[n<<3]=R,s[n<<2]=1,i[n<<1]=R},u=(n,R)=>{n<<=3,I[n]=I[n]<=R?I[n]:R,f[n]=f[n]>=R?f[n]:R,++s[n>>1],i[n>>2]+=R},M=w(e-m),c=Buffer.allocUnsafe(M+107),p=0,_=0,a=0,h=t*1e4,l=N(t);for(;m<e;){let n=Math.min(M,e-m);V(r,c,p,n,m),m+=n;for(let R=p+n;p<R;++p){if(c[p]!==10)continue;let E=p-5;c[E]!==59&&(E+=1|1+~(c[E-1]===59)),[l,_]=L(l,c,a,E),a=p+1;let D=H(c,E+1,p);_+=1,l[_]!==0?u(l[_],D):(l[_]=++h,o(h,D))}c.copyWithin(0,a,p),p-=a,a=0}return{id:t,trie:l}}function k({a:e,b:r,tries:t,counts:m,maxes:s,mins:f,sums:I}){return{ids:S(t,e,r,(o,u)=>{o<<=3,u<<=3,f[o]=f[o]<=f[u]?f[o]:f[u],s[o]=s[o]>=s[u]?s[o]:s[u],m[o>>1]+=m[u>>1],I[o>>2]+=I[u>>2]}),tries:t}}if($){let e=Q(import.meta.url);P(process.argv[2],e,Y())}else g.addListener("message",e=>{if(e.type===0)g.postMessage(W(e));else if(e.type===1)g.postMessage(k(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.mjs.map
