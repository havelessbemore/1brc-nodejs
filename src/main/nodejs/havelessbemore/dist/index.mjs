import{availableParallelism as Y}from"node:os";import{fileURLToPath as Q}from"node:url";import{isMainThread as $,parentPort as g}from"node:worker_threads";import{closeSync as Z,createWriteStream as F,openSync as G}from"node:fs";import{stdout as K}from"node:process";import{fstatSync as B,readSync as x}from"fs";function X(e,r,t){return e>r?e<=t?e:t:r}function A(e,r,t,a=0){let u=B(e).size,s=Math.max(a,Math.floor(u/r)),p=Buffer.allocUnsafe(t),i=[],f=0;for(let o=s;o<u;o+=s){let c=x(e,p,0,t,o),I=p.indexOf(10);I>=0&&I<c&&(o+=I+1,i.push([f,o]),f=o)}return f<u&&i.push([f,u]),i}function w(e){return e*=.00625,e=Math.round(Math.log2(e)),e=2**e,X(e,16384,8388608)}function L(e,r,t,a){let u=1;for(;t<a;){u+=2+1*(r[t++]-32);let s=e[u+0];s===0&&(s=e[0],s+218>e.length&&(e=S(e,s+218)),e[0]+=218,e[u+0]=s,e[s+0]=e[1]),u=s}return[e,u]}function N(e=0,r=655360){r=Math.max(219,r);let t=new Int32Array(new SharedArrayBuffer(r<<2));return t[0]=219,t[1]=e,t}function S(e,r=0){let t=e[0];r=Math.max(r,Math.ceil(t*1.618033988749895));let a=new Int32Array(new SharedArrayBuffer(r<<2));for(let u=0;u<t;++u)a[u]=e[u];return a}function T(e,r,t,a){let u=[],s=[[r,1,t,1]];do{let p=s.length;for(let i=0;i<p;++i){let[f,o,c,I]=s[i],l=e[c][I+1];if(l!==0){let m=e[f][o+1];m!==0?a(m,l):e[f][o+1]=l}o+=2,I+=2;let D=I+216;for(;I<D;){let m=e[c][I+0];if(m!==0){let h=e[c][m+0];c!==h&&(m=e[c][m+1]);let M=e[f][o+0];if(M===0)M=e[f][0],M+2>e[f].length&&(e[f]=S(e[f],M+2),u.push(f)),e[f][0]+=2,e[f][o+0]=M,e[f][M+0]=h,e[f][M+1]=m;else{let n=e[f][M+0];f!==n&&(M=e[f][M+1]),s.push([n,M,h,m])}}o+=1,I+=1}}s.splice(0,p)}while(s.length>0);return u}function O(e,r,t,a,u="",s){let p=new Array(r.length+1);p[0]=[t,3,0];let i=0,f=!1;do{let[o,c,I]=p[i];if(I>=216){--i;continue}p[i][1]+=1,++p[i][2];let l=e[o][c+0];if(l===0)continue;let D=e[o][l+0];o!==D&&(l=e[o][l+1],o=D),r[i]=I+32,p[++i]=[o,l+2,0];let m=e[o][l+1];m!==0&&(f&&a.write(u),f=!0,s(a,r,i,m))}while(i>=0)}import{Worker as v}from"node:worker_threads";function C(e){let r=new v(e);return r.on("error",t=>{throw t}),r.on("messageerror",t=>{throw t}),r.on("exit",t=>{if(t>1||t<0)throw new Error(`Worker ${r.threadId} exited with code ${t}`)}),r}function d(e,r){return new Promise(t=>{e.once("message",t),e.postMessage(r)})}async function P(e,r,t,a=""){t=X(t,1,512);let u=G(e,"r"),s=A(u,t,107,16384);t=s.length;let p=new SharedArrayBuffer(1e4*t+1<<4),i=new Int16Array(p),f=new Int16Array(p,2),o=new Uint32Array(p,4),c=new Float64Array(p,8),I=new Array(t),l=[],D=new Array(t);for(let n=0;n<t;++n){let R=C(r);D[n]=d(R,{type:0,counts:o,end:s[n][1],fd:u,id:n,maxes:f,mins:i,start:s[n][0],sums:c}).then(async E=>{let _=E.id;for(I[_]=E.trie;l.length>0;){let y=await d(R,{type:1,a:_,b:l.pop(),counts:o,maxes:f,mins:i,sums:c,tries:I});for(let b of y.ids)I[b]=y.tries[b]}return l.push(_),R.terminate()})}await Promise.all(D),Z(u);let m=F(a,{fd:a.length<1?K.fd:void 0,flags:"a",highWaterMark:1048576}),h=Buffer.allocUnsafe(100);m.write("{"),O(I,h,l[0],m,", ",M),m.end(`}
`);function M(n,R,E,_){let y=Math.round(c[_<<1]/o[_<<2]);n.write(R.toString("utf8",0,E)),n.write("="),n.write((i[_<<3]/10).toFixed(1)),n.write("/"),n.write((y/10).toFixed(1)),n.write("/"),n.write((f[_<<3]/10).toFixed(1))}}import{readSync as V}from"fs";var U=11*48,q=111*48;function H(e,r,t){return e[r]===45?(++r,r+4>t?U-10*e[r]-e[r+2]:q-100*e[r]-10*e[r+1]-e[r+3]):r+4>t?10*e[r]+e[r+2]-U:100*e[r]+10*e[r+1]+e[r+3]-q}function W({end:e,fd:r,id:t,start:a,counts:u,maxes:s,mins:p,sums:i}){let f=w(e-a),o=Buffer.allocUnsafe(f+107),c=0,I=0,l=0,D=t*1e4+1,m=N(t);for(;a<e;){let n=V(r,o,c,f,a);a+=n;for(let R=c+n;c<R;++c)if(o[c]===10){let E=c-5;o[E]!==59&&(E+=1|1+~(o[E-1]===59)),[m,I]=L(m,o,l,E),l=c+1;let _=H(o,E+1,c);I+=1,m[I]!==0?M(m[I],_):(m[I]=D,h(D++,_))}o.copyWithin(0,l,c),c-=l,l=0}function h(n,R){p[n<<3]=R,s[n<<3]=R,u[n<<2]=1,i[n<<1]=R}function M(n,R){n<<=3,p[n]=p[n]<=R?p[n]:R,s[n]=s[n]>=R?s[n]:R,++u[n>>1],i[n>>2]+=R}return{id:t,trie:m}}function k({a:e,b:r,tries:t,counts:a,maxes:u,mins:s,sums:p}){function i(o,c){o<<=3,c<<=3,s[o]=Math.min(s[o],s[c]),u[o]=Math.max(u[o],u[c]),a[o>>1]+=a[c>>1],p[o>>2]+=p[c>>2]}return{ids:T(t,e,r,i),tries:t}}if($){let e=Q(import.meta.url);P(process.argv[2],e,Y())}else g.addListener("message",e=>{if(e.type===0)g.postMessage(W(e));else if(e.type===1)g.postMessage(k(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.mjs.map
