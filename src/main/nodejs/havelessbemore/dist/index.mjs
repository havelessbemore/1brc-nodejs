import{availableParallelism as Y}from"node:os";import{fileURLToPath as Q}from"node:url";import{isMainThread as $,parentPort as g}from"node:worker_threads";import{closeSync as Z,createWriteStream as F,openSync as G}from"node:fs";import{stdout as K}from"node:process";import{fstatSync as B,readSync as x}from"fs";function X(e,r,t){return e>r?e<=t?e:t:r}function b(e,r,t,a=0){let c=B(e).size,n=Math.max(a,Math.floor(c/r)),I=Buffer.allocUnsafe(t),p=[],f=0;for(let o=n;o<c;o+=n){let s=x(e,I,0,t,o),i=I.indexOf(10);i>=0&&i<s&&(o+=i+1,p.push([f,o]),f=o)}return f<c&&p.push([f,c]),p}function w(e){return e*=.00625,e=Math.round(Math.log2(e)),e=2**e,X(e,16384,8388608)}function L(e,r,t,a){let c=1;for(;t<a;){c+=2+1*(r[t++]-32);let n=e[c+0];n===0&&(n=e[0],n+218>e.length&&(e=S(e,n+218)),e[0]+=218,e[c+0]=n,e[n+0]=e[1]),c=n}return[e,c]}function N(e=0,r=655360){r=Math.max(219,r);let t=new Int32Array(new SharedArrayBuffer(r<<2));return t[0]=219,t[1]=e,t}function S(e,r=0){let t=e[0];r=Math.max(r,Math.ceil(t*1.618033988749895));let a=new Int32Array(new SharedArrayBuffer(r<<2));for(let c=0;c<t;++c)a[c]=e[c];return a}function T(e,r,t,a){let c=[],n=[[r,1,t,1]];do{let I=n.length;for(let p=0;p<I;++p){let[f,o,s,i]=n[p],l=e[s][i+1];if(l!==0){let m=e[f][o+1];m!==0?a(m,l):e[f][o+1]=l}o+=2,i+=2;let D=i+216;for(;i<D;){let m=e[s][i+0];if(m!==0){let h=e[s][m+0];s!==h&&(m=e[s][m+1]);let M=e[f][o+0];if(M===0)M=e[f][0],M+2>e[f].length&&(e[f]=S(e[f],M+2),c.push(f)),e[f][0]+=2,e[f][o+0]=M,e[f][M+0]=h,e[f][M+1]=m;else{let u=e[f][M+0];f!==u&&(M=e[f][M+1]),n.push([u,M,h,m])}}o+=1,i+=1}}n.splice(0,I)}while(n.length>0);return c}function O(e,r,t,a,c="",n){let I=new Array(r.length+1);I[0]=[t,3,0];let p=0,f=!1;do{let[o,s,i]=I[p];if(i>=216){--p;continue}I[p][1]+=1,++I[p][2];let l=e[o][s+0];if(l===0)continue;let D=e[o][l+0];o!==D&&(l=e[o][l+1],o=D),r[p]=i+32,I[++p]=[o,l+2,0];let m=e[o][l+1];m!==0&&(f&&a.write(c),f=!0,n(a,r,p,m))}while(p>=0)}import{Worker as v}from"node:worker_threads";function C(e){let r=new v(e);return r.on("error",t=>{throw t}),r.on("messageerror",t=>{throw t}),r.on("exit",t=>{if(t>1||t<0)throw new Error(`Worker ${r.threadId} exited with code ${t}`)}),r}function d(e,r){return new Promise(t=>{e.once("message",t),e.postMessage(r)})}async function P(e,r,t,a=""){t=X(t,1,512);let c=G(e,"r"),n=b(c,t,107,16384);t=n.length;let I=new SharedArrayBuffer(1e4*t+1<<4),p=new Int16Array(I),f=new Int16Array(I,2),o=new Uint32Array(I,4),s=new Float64Array(I,8),i=new Array(t),l=[],D=new Array(t);for(let u=0;u<t;++u){let R=C(r);D[u]=d(R,{type:0,counts:o,end:n[u][1],fd:c,id:u,maxes:f,mins:p,start:n[u][0],sums:s}).then(async E=>{let _=E.id;for(i[_]=E.trie;l.length>0;){let y=await d(R,{type:1,a:_,b:l.pop(),counts:o,maxes:f,mins:p,sums:s,tries:i});for(let A of y.ids)i[A]=y.tries[A]}return l.push(_),R.terminate()})}await Promise.all(D),Z(c);let m=F(a,{fd:a.length<1?K.fd:void 0,flags:"a",highWaterMark:1048576}),h=Buffer.allocUnsafe(100);m.write("{"),O(i,h,l[0],m,", ",M),m.end(`}
`);function M(u,R,E,_){let y=Math.round(s[_<<1]/o[_<<2]);u.write(R.toString("utf8",0,E)),u.write("="),u.write((p[_<<3]/10).toFixed(1)),u.write("/"),u.write((y/10).toFixed(1)),u.write("/"),u.write((f[_<<3]/10).toFixed(1))}}import{readSync as V}from"fs";var U=11*48,q=111*48;function H(e,r,t){return e[r]===45?(++r,r+4>t?U-10*e[r]-e[r+2]:q-100*e[r]-10*e[r+1]-e[r+3]):r+4>t?10*e[r]+e[r+2]-U:100*e[r]+10*e[r+1]+e[r+3]-q}function W({end:e,fd:r,id:t,start:a,counts:c,maxes:n,mins:I,sums:p}){let f=w(e-a),o=Buffer.allocUnsafe(f+107),s=0,i=0,l=0,D=t*1e4,m=N(t);for(;a<e;){let u=V(r,o,s,f,a);a+=u;for(let R=s+u;s<R;++s)if(o[s]===10){let E=s-5;o[E]!==59&&(E+=1|1+~(o[E-1]===59)),[m,i]=L(m,o,l,E),l=s+1;let _=H(o,E+1,s);i+=1,m[i]!==0?M(m[i],_):(m[i]=++D,h(D,_))}o.copyWithin(0,l,s),s-=l,l=0}function h(u,R){I[u<<3]=R,n[u<<3]=R,c[u<<2]=1,p[u<<1]=R}function M(u,R){u<<=3,I[u]=I[u]<=R?I[u]:R,n[u]=n[u]>=R?n[u]:R,++c[u>>1],p[u>>2]+=R}return{id:t,trie:m}}function k({a:e,b:r,tries:t,counts:a,maxes:c,mins:n,sums:I}){function p(o,s){o<<=3,s<<=3,n[o]=n[o]<=n[s]?n[o]:n[s],c[o]=n[o]>=n[s]?n[o]:n[s],a[o>>1]+=a[s>>1],I[o>>2]+=I[s>>2]}return{ids:T(t,e,r,p),tries:t}}if($){let e=Q(import.meta.url);P(process.argv[2],e,Y())}else g.addListener("message",e=>{if(e.type===0)g.postMessage(W(e));else if(e.type===1)g.postMessage(k(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.mjs.map
