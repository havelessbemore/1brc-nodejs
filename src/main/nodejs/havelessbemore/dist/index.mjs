import{availableParallelism as V}from"node:os";import{fileURLToPath as K}from"node:url";import{isMainThread as G,parentPort as b}from"node:worker_threads";import{createWriteStream as x}from"node:fs";import{open as Z}from"node:fs/promises";import{stdout as v}from"node:process";function d(e,t,r){return e>t?e<=r?e:r:t}async function w(e,t,r,I=0){let u=(await e.stat()).size,f=Math.max(I,Math.floor(u/t)),p=Buffer.allocUnsafe(r),a=[],n=0;for(let o=f;o<u;o+=f){let c=await e.read(p,0,r,o),m=p.indexOf(10);m>=0&&m<c.bytesRead&&(o+=m+1,a.push([n,o]),n=o)}return n<u&&a.push([n,u]),a}function L(e){return e*=152e-6,e=Math.round(Math.log2(e)),e=2**e,d(e,16384,1048576)}function N(e,t,r,I){let u=1;for(;r<I;){u+=2+1*(t[r++]-32);let f=e[u+0];f===0&&(f=e[0],f+218>e.length&&(e=T(e,f+218)),e[0]+=218,e[u+0]=f,e[f+0]=e[1]),u=f}return[e,u]}function g(e=0,t=655360){t=Math.max(219,t);let r=new Int32Array(new SharedArrayBuffer(t<<2));return r[0]=219,r[1]=e,r}function T(e,t=0){let r=e[0];t=Math.max(t,Math.ceil(r*1.6180339887));let I=new Int32Array(new SharedArrayBuffer(t<<2));for(let u=0;u<r;++u)I[u]=e[u];return I}function S(e,t,r,I){let u=new Set,f=[[t,1,r,1]];do{let p=f.length;for(let a=0;a<p;++a){let[n,o,c,m]=f[a],l=e[c][m+1];if(l!==0){let M=e[n][o+1];M!==0?I(M,l):e[n][o+1]=l}o+=2,m+=2;let R=m+216;for(;m<R;){let M=e[c][m+0];if(M!==0){let h=e[c][M+0];c!==h&&(M=e[c][M+1]);let s=e[n][o+0];if(s===0)s=e[n][0],s+2>e[n].length&&(e[n]=T(e[n],s+2),u.add(n)),e[n][0]+=2,e[n][o+0]=s,e[n][s+0]=h,e[n][s+1]=M;else{let i=e[n][s+0];n!==i&&(s=e[n][s+1]),f.push([i,s,h,M])}}o+=1,m+=1}}f.splice(0,p)}while(f.length>0);return Array.from(u)}function U(e,t,r,I,u="",f){let p=new Array(t.length+1);p[0]=[r,3,0];let a=0,n=!1;do{let[o,c,m]=p[a];if(m>=216){--a;continue}p[a][1]+=1,++p[a][2];let l=e[o][c+0];if(l===0)continue;let R=e[o][l+0];o!==R&&(l=e[o][l+1],o=R),t[a]=m+32,p[++a]=[o,l+2,0];let M=e[o][l+1];M!==0&&(n&&I.write(u),n=!0,f(I,t,a,M))}while(a>=0)}import{Worker as W}from"node:worker_threads";function O(e){let t=new W(e);return t.on("error",r=>{throw r}),t.on("messageerror",r=>{throw r}),t.on("exit",r=>{if(r>1||r<0)throw new Error(`Worker ${t.threadId} exited with code ${r}`)}),t}function y(e,t){return new Promise(r=>{e.once("message",r),e.postMessage(t)})}async function C(e,t,r,I=""){r=d(r,1,512);let u=await Z(e,"r"),f=await w(u,r,107,16384);r=f.length;let p=new SharedArrayBuffer(1e4*r+1<<4),a=new Int16Array(p),n=new Int16Array(p,2),o=new Uint32Array(p,4),c=new Float64Array(p,8),m=new Array(r),l=[],R=new Array(r);for(let i=0;i<r;++i){let D=O(t);R[i]=y(D,{type:"process",counts:o,end:f[i][1],fd:u.fd,id:i,maxes:n,mins:a,start:f[i][0],sums:c}).then(async _=>{let E=_.id;for(m[_.id]=_.trie;l.length>0;){let X=await y(D,{type:"merge",a:E,b:l.pop(),counts:o,maxes:n,mins:a,sums:c,tries:m});for(let A of X.ids)m[A]=X.tries[A]}return l.push(E),D.terminate()})}await Promise.all(R),await u.close();let M=x(I,{fd:I.length<1?v.fd:void 0,flags:"a",highWaterMark:1048576}),h=Buffer.allocUnsafe(100);M.write("{"),U(m,h,l[0],M,", ",s),M.end(`}
`);function s(i,D,_,E){let X=Math.round(c[E<<1]/o[E<<2]);i.write(D.toString("utf8",0,_)),i.write("="),i.write((a[E<<3]/10).toFixed(1)),i.write("/"),i.write((X/10).toFixed(1)),i.write("/"),i.write((n[E<<3]/10).toFixed(1))}}import{createReadStream as F}from"node:fs";var P=11*48,q=111*48;function H(e,t,r){return e[t]===45?(++t,t+4>r?P-10*e[t]-e[t+2]:q-100*e[t]-10*e[t+1]-e[t+3]):t+4>r?10*e[t]+e[t+2]-P:100*e[t]+10*e[t+1]+e[t+3]-q}async function k({end:e,fd:t,id:r,start:I,counts:u,maxes:f,mins:p,sums:a}){if(I>=e)return{id:r,trie:g(r,0)};let n=g(r),o=r*1e4+1,c=Buffer.allocUnsafe(107),m={autoClose:!1,fd:t,start:I,end:e-1,highWaterMark:L(e-I)},l=-1,R;for await(let s of F("",m)){let i=s.length;for(let D=0;D<i;++D)if(c[++l]=s[D],s[D]===10){let _=l-5;c[_]!==59&&(_+=1|1+~(c[_-1]===59));let E=H(c,_+1,l);l=-1,[n,R]=N(n,c,0,_),n[R+1]!==0?h(n[R+1],E):(n[R+1]=o,M(o++,E))}}function M(s,i){p[s<<3]=i,f[s<<3]=i,u[s<<2]=1,a[s<<1]=i}function h(s,i){s<<=3,p[s]=p[s]<=i?p[s]:i,f[s]=f[s]>=i?f[s]:i,++u[s>>1],a[s>>2]+=i}return{id:r,trie:n}}function B({a:e,b:t,tries:r,counts:I,maxes:u,mins:f,sums:p}){function a(o,c){o<<=3,c<<=3,f[o]=Math.min(f[o],f[c]),u[o]=Math.max(u[o],u[c]),I[o>>1]+=I[c>>1],p[o>>2]+=p[c>>2]}return{ids:S(r,e,t,a),tries:r}}if(G){let e=K(import.meta.url);C(process.argv[2],e,V())}else b.addListener("message",async e=>{if(e.type==="process")b.postMessage(await k(e));else if(e.type==="merge")b.postMessage(B(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.mjs.map
