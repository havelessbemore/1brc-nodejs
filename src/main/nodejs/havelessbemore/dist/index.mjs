import{availableParallelism as Y}from"node:os";import{fileURLToPath as Q}from"node:url";import{isMainThread as $,parentPort as A}from"node:worker_threads";import{closeSync as Z,createWriteStream as F,openSync as G}from"node:fs";import{stdout as V}from"node:process";import{fstatSync as B,readSync as x}from"fs";function X(e,t,r){return e>t?e<=r?e:r:t}function w(e,t,r,c=0){let s=B(e).size,u=Math.max(c,Math.floor(s/t)),i=Buffer.allocUnsafe(r),f=[],n=0;for(let o=u;o<s;o+=u){let m=x(e,i,0,r,o),l=i.indexOf(10);l>=0&&l<m&&(o+=l+1,f.push([n,o]),n=o)}return n<s&&f.push([n,s]),f}function L(e){return e*=.00625,e=Math.round(Math.log2(e)),e=2**e,X(e,16384,8388608)}function N(e,t,r,c){let s=1;for(;r<c;){s+=2+1*(t[r++]-32);let u=e[s+0];u===0&&(u=e[0],u+218>e.length&&(e=T(e,u+218)),e[0]+=218,e[s+0]=u,e[u+0]=e[1]),s=u}return[e,s]}function b(e=0,t=655360){t=Math.max(219,t);let r=new Int32Array(new SharedArrayBuffer(t<<2));return r[0]=219,r[1]=e,r}function T(e,t=0){let r=e[0];t=Math.max(t,Math.ceil(r*1.618033988749895));let c=new Int32Array(new SharedArrayBuffer(t<<2));for(let s=0;s<r;++s)c[s]=e[s];return c}function S(e,t,r,c){let s=[],u=[[t,1,r,1]];do{let i=u.length;for(let f=0;f<i;++f){let[n,o,m,l]=u[f],p=e[m][l+1];if(p!==0){let a=e[n][o+1];a!==0?c(a,p):e[n][o+1]=p}o+=2,l+=2;let M=l+216;for(;l<M;){let a=e[m][l+0];if(a!==0){let h=e[m][a+0];m!==h&&(a=e[m][a+1]);let D=e[n][o+0];if(D===0)D=e[n][0],D+2>e[n].length&&(e[n]=T(e[n],D+2),s.push(n)),e[n][0]+=2,e[n][o+0]=D,e[n][D+0]=h,e[n][D+1]=a;else{let R=e[n][D+0];n!==R&&(D=e[n][D+1]),u.push([R,D,h,a])}}o+=1,l+=1}}u.splice(0,i)}while(u.length>0);return s}function O(e,t,r,c,s="",u){let i=new Array(t.length+1);i[0]=[r,3,0];let f=0,n=!1;do{let[o,m,l]=i[f];if(l>=216){--f;continue}i[f][1]+=1,++i[f][2];let p=e[o][m+0];if(p===0)continue;let M=e[o][p+0];o!==M&&(p=e[o][p+1],o=M),t[f]=l+32,i[++f]=[o,p+2,0];let a=e[o][p+1];a!==0&&(n&&c.write(s),n=!0,u(c,t,f,a))}while(f>=0)}import{Worker as v}from"node:worker_threads";function U(e){let t=new v(e);return t.on("error",r=>{throw r}),t.on("messageerror",r=>{throw r}),t.on("exit",r=>{if(r>1||r<0)throw new Error(`Worker ${t.threadId} exited with code ${r}`)}),t}function g(e,t){return new Promise(r=>{e.once("message",r),e.postMessage(t)})}async function C(e,t,r,c=""){r=X(r,1,512);let s=G(e,"r"),u=w(s,r,107,16384);r=u.length;let i=new SharedArrayBuffer(1e4*r+1<<4),f=new Int16Array(i),n=new Int16Array(i,2),o=new Uint32Array(i,4),m=new Float64Array(i,8),l=new Array(r),p=[],M=new Array(r);for(let R=0;R<r;++R){let I=U(t);M[R]=g(I,{type:0,counts:o,end:u[R][1],filePath:e,id:R,maxes:n,mins:f,start:u[R][0],sums:m}).then(async _=>{let E=_.id;for(l[E]=_.trie;p.length>0;){let y=await g(I,{type:1,a:E,b:p.pop(),counts:o,maxes:n,mins:f,sums:m,tries:l});for(let d of y.ids)l[d]=y.tries[d]}return p.push(E),I.terminate()})}await Promise.all(M),Z(s);let a=F(c,{fd:c.length<1?V.fd:void 0,flags:"a",highWaterMark:1048576}),h=Buffer.allocUnsafe(100);a.write("{"),O(l,h,p[0],a,", ",D),a.end(`}
`);function D(R,I,_,E){let y=Math.round(m[E<<1]/o[E<<2]);R.write(I.toString("utf8",0,_)),R.write("="),R.write((f[E<<3]/10).toFixed(1)),R.write("/"),R.write((y/10).toFixed(1)),R.write("/"),R.write((n[E<<3]/10).toFixed(1))}}import{open as K}from"fs/promises";var P=11*48,q=111*48;function H(e,t,r){return e[t]===45?(++t,t+4>r?P-10*e[t]-e[t+2]:q-100*e[t]-10*e[t+1]-e[t+3]):t+4>r?10*e[t]+e[t+2]-P:100*e[t]+10*e[t+1]+e[t+3]-q}async function W({end:e,filePath:t,id:r,start:c,counts:s,maxes:u,mins:i,sums:f}){if(c>=e)return{id:r,trie:b(r,0)};let n=b(r),o=r*1e4+1,m=await K(t,"r"),l=L(e-c),p=Buffer.allocUnsafe(l+107),M=0,a=0,h;for(;c<e;){let I=await m.read(p,M,l,c);c+=I.bytesRead;for(let _=M+I.bytesRead;M<_;++M)if(p[M]===10){let E=M-5;p[E]!==59&&(E+=1|1+~(p[E-1]===59));let y=H(p,E+1,M);[n,h]=N(n,p,a,E),a=M+1,n[h+1]!==0?R(n[h+1],y):(n[h+1]=o,D(o++,y))}p.copyWithin(0,a,M),M-=a,a=0}function D(I,_){i[I<<3]=_,u[I<<3]=_,s[I<<2]=1,f[I<<1]=_}function R(I,_){I<<=3,i[I]=i[I]<=_?i[I]:_,u[I]=u[I]>=_?u[I]:_,++s[I>>1],f[I>>2]+=_}return await m.close(),{id:r,trie:n}}function k({a:e,b:t,tries:r,counts:c,maxes:s,mins:u,sums:i}){function f(o,m){o<<=3,m<<=3,u[o]=Math.min(u[o],u[m]),s[o]=Math.max(s[o],s[m]),c[o>>1]+=c[m>>1],i[o>>2]+=i[m>>2]}return{ids:S(r,e,t,f),tries:r}}if($){let e=Q(import.meta.url);C(process.argv[2],e,Y())}else A.addListener("message",async e=>{if(e.type===0)A.postMessage(await W(e));else if(e.type===1)A.postMessage(k(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.mjs.map
