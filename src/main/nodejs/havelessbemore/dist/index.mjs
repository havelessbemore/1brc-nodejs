/*!
 * https://github.com/havelessbemore/1brc-nodejs
 *
 * MIT License
 *
 * Copyright (C) 2024-2024 Michael Rojas <dev.michael.rojas@gmail.com> (https://github.com/havelessbemore)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import{availableParallelism as $}from"node:os";import{fileURLToPath as V}from"node:url";import{isMainThread as z,parentPort as H}from"node:worker_threads";import{createWriteStream as j,createReadStream as J}from"node:fs";import{open as Q}from"fs/promises";import{Worker as ee}from"worker_threads";const X=1e4,te=100,L=107,re=45,x=10,U=59,W=48,C=32,ne=216,P=16384,oe=1048576,se=1048576,ae=152e-6,ie=P,F=11*W,k=111*W,_e=1,ce=512;function B(e,n,r){return e>n?e<=r?e:r:n}async function Ee(e,n,r,I=0){const i=await Q(e);try{const s=(await i.stat()).size,l=Math.max(I,Math.floor(s/n)),E=Buffer.allocUnsafe(r),o=[];let a=0;for(let c=l;c<s;c+=l){const u=await i.read(E,0,r,c),_=E.indexOf(x);_>=0&&_<u.bytesRead&&(c+=_+1,o.push([a,c]),a=c)}return a<s&&o.push([a,s]),o}finally{await i.close()}}function fe(e){return e*=ae,e=Math.round(Math.log2(e)),e=2**e,B(e,P,oe)}const le=655360,Ie=1.6180339887,ue=1,N=ue,Re=1,D=1,Me=1,S=Re+Me,Te=0,me=1,d=1,he=1,p=2,K=ne,Z=N*K,O=me+he+Z,h=0,g=0,we=1,y=1,Ae=O,b=y+Te,G=we+Ae;function de(e,n,r,I){let i=y;for(;r<I;){i+=p+(n[r++]-C);let s=e[i];s===h&&(s=e[g],s+O>e.length&&(e=v(e,s+O)),e[g]+=O,e[i]=s,e[s]=e[b]),i=s}return[e,i]}function q(e=0,n=le){n=Math.max(G,n);const r=new Int32Array(new SharedArrayBuffer(n<<2));return r[g]=G,r[b]=e,r}function v(e,n=0){const r=e[g];n=Math.max(n,Math.ceil(r*Ie));const I=new Int32Array(new SharedArrayBuffer(n<<2));for(let i=0;i<r;++i)I[i]=e[i];return I}function ge(e,n,r,I){const i=new Set,s=[[n,y,r,y]];do{const l=s.length;for(let E=0;E<l;++E){let[o,a,c,u]=s[E];const _=e[c][u+d];if(_!==h){const R=e[o][a+d];R!==h?I(R,_):e[o][a+d]=_}a+=p,u+=p;const T=u+Z;for(;u<T;){let R=e[c][u];if(R!==h){const w=e[c][R];c!==w&&(R=e[c][R+D]);let t=e[o][a];if(t===h)t=e[o][g],t+S>e[o].length&&(e[o]=v(e[o],t+S),i.add(o)),e[o][g]+=S,e[o][a]=t,e[o][t]=w,e[o][t+D]=R;else{const f=e[o][t];o!==f&&(t=e[o][t+D]),s.push([f,t,w,R])}}a+=N,u+=N}}s.splice(0,l)}while(s.length>0);return Array.from(i)}function pe(e,n,r,I,i="",s){const l=new Array(n.length+1);l[0]=[r,y+p,0];let E=0,o=!1;do{let[a,c,u]=l[E];if(u>=K){--E;continue}l[E][1]+=N,++l[E][2];let _=e[a][c];if(_===h)continue;const T=e[a][_];a!==T&&(_=e[a][_+D],a=T),n[E]=u+C,l[++E]=[a,_+p,0];const R=e[a][_+d];R!==h&&(o&&I.write(i),o=!0,s(I,n,E,R))}while(E>=0)}function ye(e){const n=new ee(e);return n.on("error",r=>{throw r}),n.on("messageerror",r=>{throw r}),n.on("exit",r=>{if(r>1||r<0)throw new Error(`Worker ${n.threadId} exited with code ${r}`)}),n}function Y(e,n){return new Promise(r=>{e.once("message",r),e.postMessage(n)})}async function Ne(e,n,r,I=""){r=B(r,_e,ce);const i=await Ee(e,r,L,ie);r=i.length;const s=new SharedArrayBuffer(X*r+1<<4),l=new Int16Array(s),E=new Int16Array(s,2),o=new Uint32Array(s,4),a=new Float64Array(s,8),c=new Array(r),u=new Array(r);for(let t=0;t<r;++t)u[t]=ye(n);const _=new Array(r);for(let t=0;t<r;++t)_[t]=Y(u[t],{type:"process_request",counts:o,end:i[t][1],filePath:e,id:t,maxes:E,mins:l,start:i[t][0],sums:a}).then(f=>{c[f.id]=f.trie});for(let t=_.length-1;t>0;--t){const f=t-1>>1,m=t;_[f]=_[f].then(()=>_[m]).then(()=>Y(u[f],{type:"merge_request",a:f,b:m,counts:o,maxes:E,mins:l,sums:a,tries:c})).then(M=>{for(const A of M.ids)c[A]=M.tries[A]})}for(let t=0;t<r;++t)_[t]=_[t].then(()=>u[t].terminate());await Promise.all(_);const T=j(I,{fd:I.length<1?1:void 0,flags:"a",highWaterMark:se}),R=Buffer.allocUnsafe(te);T.write("{"),pe(c,R,0,T,", ",w),T.end(`}
`);function w(t,f,m,M){const A=Math.round(a[M<<1]/o[M<<2]);t.write(f.toString("utf8",0,m)),t.write("="),t.write((l[M<<3]/10).toFixed(1)),t.write("/"),t.write((A/10).toFixed(1)),t.write("/"),t.write((E[M<<3]/10).toFixed(1))}}async function De({end:e,filePath:n,id:r,start:I,counts:i,maxes:s,mins:l,sums:E}){if(I>=e)return{type:"process_response",id:r,trie:q(r,0)};let o=q(r),a=r*X+1;const c=Buffer.allocUnsafe(L),u=J(n,{start:I,end:e-1,highWaterMark:fe(e-I)});let _=0,T;for await(const t of u){const f=t.length;for(let m=0;m<f;++m){if(t[m]!==x){c[_++]=t[m];continue}let M=_-4;c[M-2]===U?M-=2:c[M-1]===U&&(M-=1);const A=Oe(c,M+1,_);_=0,[o,T]=de(o,c,0,M),o[T+d]!==h?w(o[T+d],A):(o[T+d]=a,R(a++,A))}}function R(t,f){l[t<<3]=f,s[t<<3]=f,i[t<<2]=1,E[t<<1]=f}function w(t,f){t<<=3,l[t]=l[t]<=f?l[t]:f,s[t]=s[t]>=f?s[t]:f,++i[t>>1],E[t>>2]+=f}return{type:"process_response",id:r,trie:o}}function Oe(e,n,r){return e[n]===re?(++n,n+4>r?-(10*e[n]+e[n+2]-F):-(100*e[n]+10*e[n+1]+e[n+3]-k)):n+4>r?10*e[n]+e[n+2]-F:100*e[n]+10*e[n+1]+e[n+3]-k}function He({a:e,b:n,tries:r,counts:I,maxes:i,mins:s,sums:l}){function E(o,a){o<<=3,a<<=3,s[o]=Math.min(s[o],s[a]),i[o]=Math.max(i[o],i[a]),I[o>>1]+=I[a>>1],l[o>>2]+=l[a>>2]}return{type:"merge_response",ids:ge(r,e,n,E),tries:r}}if(z){const e=V(import.meta.url);Ne(process.argv[2],e,$())}else H.addListener("message",async e=>{if(e.type==="process_request")H.postMessage(await De(e));else if(e.type==="merge_request")H.postMessage(He(e));else throw new Error("Unknown message type")});
//# sourceMappingURL=index.mjs.map
